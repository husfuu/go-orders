openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/husfuu/go-order/1.0.0
info:
  description: Go order API is a simple api with one to many relation between order and items
  version: "1.0.0"
  title: Go Order
  contact:
    email: husfuudev@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: user
    description: Secured Admin-only calls
  - name: developers
    description: Operations available to regular developers
paths:
  /orders:
    get:
      tags:
        - developers
      summary: get all orders
      description: |
        get all orders including its item
      responses:
        '200':
          description: all orders that store in the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderObject'
        '400':
          description: bad input parameter
    post:
      tags:
        - developers
      summary: add an order
      operationId: addInventory
      description: Adds an order with its items
      responses:
        '201':
          description: order created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderObject'
        description: Order item to add
    
  /orders:{id}:
    get:
      tags:
        - developers
      summary: get all orders
      description: |
        get all orders including its item
      responses:
        '200':
          description: all orders that store in the database
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderObject'
        '400':
          description: bad input parameter
    put:
      tags:
        - developers
      summary: edit an order
      operationId: addInventory
      description: Edit an order with its items
      parameters:
        - name: id
          in: path
          description: ID of order to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '201':
          description: order edited
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderObject'
        description: Order item to add
    delete:
      tags:
        - developers
      summary: delete an order
      operationId: addInventory
      description: Delete an order with its items
      parameters:
        - name: id
          in: path
          description: ID of order to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '201':
          description: order deleted
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists


components:
  schemas:
    OrderObject:
      type: object
      required:
        - customer_name
        - order_items
      properties:
        customer_name:
          type: string
          example: M. Husni Nur Fadillah
        order_items:
          type: array
          items: 
            properties:
              code:
                type: string
              description:
                type: string
              "quantity":
                type: integer
          example: [
            {
              "code": "001-item",
              "description": "Dress",
              "quantity": 2
            }
          ]